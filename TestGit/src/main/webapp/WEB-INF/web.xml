<?xml version="1.0" encoding="UTF-8"?>
<web-app version="3.0" xmlns="http://java.sun.com/xml/ns/javaee"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://java.sun.com/xml/ns/javaee                       
	http://java.sun.com/xml/ns/javaee/web-app_3_0.xsd">
	<!--20  1.添加全局配置参数,添加Spring容器的applicationContext-*.xml配置文件到Web容器 -->	
		<context-param>
			<param-name>contextConfigLocation</param-name>
		<!-- 1.1 使用(*)号通配符,才能将applicationContext-core.xml和applicationContext-shiro.xml两个配置文件都加载进来 -->
		<!-- classpath*表示会自动加载本项目,和其他Maven项目的类路径下的jar -->
			<param-value>classpath*:applicationContext-*.xml</param-value>
		</context-param> 
	
	<!--2.配置监听器对应获取全局配置参数数据,获取上面的context-param的参数数据  -->	 
		 <listener>
			<listener-class>org.springframework.web.context.ContextLoaderListener</listener-class>
		 </listener> 
	
	<!--3.配置DispatcherServlet核心控制器,添加SpringMVC容器的springmvc.xml配置文件到Web容器  -->	 
		<servlet>
			<servlet-name>myDispatcherServlet</servlet-name>
			<servlet-class>org.springframework.web.servlet.DispatcherServlet</servlet-class>
			<!--3.1 添加内置参数 -->
			<init-param>
				<param-name>contextConfigLocation</param-name>
				<param-value>classpath:springmvc.xml</param-value>
			</init-param>
			<load-on-startup>1</load-on-startup>
		</servlet>
		
		<servlet-mapping>
			<servlet-name>myDispatcherServlet</servlet-name>
			<!--3.2 表示只匹配,如:/login和/demo,后面不带.xxx的后缀的URL请求,
				即适配所有除了后面有(点)后缀的(**.jsp,**.css)的URL请求,进入前端控制器,
				使用(/*)会导致jsp等静态资源无法被解析,因为会看作一个整体的URL,都走DispatcherServlet给转发了处理,
				如果确实想使用(/*)对jsp等静态资源进行限制,那么可以先在Filter中使用(/*)处理过滤完URL后,
				在将URL交给servlet处理使用(/)就可以了。-->
			<url-pattern>/</url-pattern>
		</servlet-mapping>
		   
	<!-- 4.配置过滤器Filter,过滤字符编码格式 ,将过滤器Filter存放到Web容器-->
		<filter>
			<filter-name>myEncoding</filter-name>
			<filter-class>org.springframework.web.filter.CharacterEncodingFilter</filter-class>
			<!-- 4.1添加内置参数 ，配置过滤的内置参数encoding属性,即请求和响应编码格式设置为utf-8 -->
			<init-param>
				<param-name>encoding</param-name>
				<param-value>utf-8</param-value>
			</init-param>
		</filter>
		<filter-mapping>
			<filter-name>myEncoding</filter-name>
			<!-- 4.2 适配所有请求,进入字符编码格式过滤器  -->
			<url-pattern>/*</url-pattern>
		</filter-mapping>
</web-app>